<?xml version="1.0" encoding="utf-8"?>
<!-- Kaiser, J. W. J., Hoppe, N., Adami, S., & Adams, N. A. (2019).
     An adaptive local time-stepping scheme for multiresolution simulations of hyperbolic conservation laws.
     Journal of Computational Physics: X, 4, 100038.
     Section 4.2 Shock-tube problem of Sod.
     -->
<configuration>
    <domain>
        <!-- Size of a single multi-resolution block on the coarsest level, i.e. level 0. -->
        <blockSize> 1  </blockSize>

        <!-- Number of blocks per dimension on the coarsest level.
             Multiplying blockRatio_x/y/z * blocksize gives the domain size in x/y/z-direction.
             Multiplying blockRatio_x/y/z * internal_cells_per_block_and_dimension (adjustable in code: compile_time_constants.h)
             gives the number of cells in x/y/z-direction on the coarsest level. Refinement of the coarse mesh is possible
             by using a multi-resolution scheme. It can be adjusted in the multiResolution section of this inputfile. -->
        <blockRatio>
            <x> 1 </x>
            <y> 1 </y>
            <z> 1 </z>
        </blockRatio>

        <!-- Boundary conditions have to be specified for all six faces of the cuboid domain. They have to be specified
             for the fluid as well as the levelset. The faces are denoted according to their geographic orientation:
                 East -> positive x direction
                 West -> negative x direction
                 North -> positive y direction
                 South -> negative y direction
                 Top -> positive z direction
                 Bottom -> negative z direction -->
        <boundaryConditions>
            <!-- Fluid boundary conditions. -->
            <fluid>
                <!-- Types of fluid boundary conditions:
                         zeroGradient,
                         symmetry,
                         wall,
                         fixedValue. -->
                <west>ZeroGradient</west>
                <east>ZeroGradient</east>
                <!-- In case a fixedValue boundary condition is used, a xml node specifying the
                     fixed prime states has to be added (see example below). -->
                <valuesEast>
                    <density>1.0</density>
                    <velocityX>0.0</velocityX>
                    <velocityY>0.0</velocityY>
                    <velocityZ>0.0</velocityZ>
                    <pressure>1.0</pressure>
                </valuesEast>
                <south>ZeroGradient</south>
                <north>ZeroGradient</north>
                <valuesNorth>
                    <density>1.0</density>
                    <velocityX>0.0</velocityX>
                    <velocityY>0.0</velocityY>
                    <velocityZ>0.0</velocityZ>
                    <pressure>1.0</pressure>
                </valuesNorth>
                <bottom>symmetry</bottom>
                <top>symmetry</top>
            </fluid>

            <!-- Levelset boundary conditions. -->
            <levelSet>
                <!-- Types of level-set boundary conditions:
                         zeroGradient,
                         symmetry. -->
                <west>   symmetry </west>
                <east>   symmetry </east>
                <south>  symmetry </south>
                <north>  symmetry </north>
                <bottom> symmetry </bottom>
                <top>    symmetry </top>
            </levelSet>
        </boundaryConditions>

        <!-- The initial state of each fluid and the levelset have to be defined. It is possible to use conditional expressions as given below. -->
        <initialConditions>
            <fluid1>
            if (x &lt; 0.5)
            {
                DENSITY : = 1.0;
                VELOCITY_X := 0.0;
                VELOCITY_Y := 0.0;
                VELOCITY_Z := 0.0;
                PRESSURE := 1.0;
            }
                else
            {
                DENSITY := 0.125;
                VELOCITY_X := 0.0;
                VELOCITY_Y := 0.0;
                VELOCITY_Z := 0.0;
                PRESSURE := 0.1;
            }
            </fluid1>

            <fluid2>
                DENSITY := 1.0;
                VELOCITY_X := 0.75;
                VELOCITY_Y := 0.0;
                VELOCITY_Z := 0.0;
                PRESSURE := 1.0;
            </fluid2>

            <levelSet1>
                phi := 1.0;
            </levelSet1>
        </initialConditions>
    </domain>

    <!-- Xml nodes defining the equation of state and its parameters for each fluid. -->
    <!-- Explanation:
         type: Choose the equation of state that has to be applied.
               Possible choices are: StiffenedGas or WaterlikeFluid (Tait), NobleAbelStiffenedGas, StiffenedGasComplete.
         gamma: Heat capacity ratio.
         B: Reference pressure used in stiffened equations of state.
         A: Parameter for the Waterlike equation of state.
         rho_0: Parameter for the Waterlike equation of state.
         C: Thermal energy factor for StiffenedGasComplete.
         The remaining parameters are self explaining.
         -->
    <fluids>
        <!-- The number of fluids in the simulation. Note: Currently, 2 is the maximum. -->
        <numberOfFluids>              1   </numberOfFluids>
        <fluid1>
            <type>StiffenedGas</type>
            <gamma>                     1.4   </gamma>
            <A>                         0.0   </A>
            <B>                         0.0   </B>
            <C>                         0.0   </C>
            <rho0>                      1.2   </rho0>
            <specificGasConstant>       1.0   </specificGasConstant>
            <thermalConductivity>       0.0   </thermalConductivity>
            <viscosity>
                <dynamicShear>          0.0   </dynamicShear>
                <dynamicBulk>           0.0   </dynamicBulk>
            </viscosity>
        </fluid1>

        <fluid2>
            <type>StiffenedGas</type>
            <gamma>                     1.4   </gamma>
            <A>                         0.0   </A>
            <B>                         0.0   </B>
            <C>                         0.0   </C>
            <rho0>                      1.2   </rho0>
            <specificGasConstant>       1.0   </specificGasConstant>
            <thermalConductivity>       0.0   </thermalConductivity>
            <viscosity>
                <dynamicShear>          0.0   </dynamicShear>
                <dynamicBulk>           0.0   </dynamicBulk>
            </viscosity>
        </fluid2>

        <surfaceTensionCoefficients> 0.0 </surfaceTensionCoefficients>
    </fluids>

    <!-- Define a volume force, due to gravity in this case, in x/y/z direction.  -->
    <sourceTerms>
        <gravity>
            <x> 0 </x>
            <y> 0 </y>
            <z> 0 </z>
        </gravity>
    </sourceTerms>

    <!-- Employ a multi-resolution scheme as described in the paper cited at the top of this file. -->
    <multiResolution>
        <!-- Number of possible refinements. Uniform meshes are obtained for maximumLevel = 0 or 1 -->
        <maximumLevel> 2 </maximumLevel>

        <refinementCriterion>
            <!-- The reference error on the given reference level for the wavelet-based refinement decisions. -->
            <epsilonReference>    0.01 </epsilonReference>
            <!-- The level on which the stated epsilon value should be enforced.
                 Note: allowed values are 0-13. -->
            <levelOfEpsilonReference> 1  </levelOfEpsilonReference>
        </refinementCriterion>
    </multiResolution>

    <calculation>
        <!-- Block where the start and end time of the simulation are defined. -->
        <timeControl>
            <startTime>            0.0           </startTime>
            <endTime>              0.2           </endTime>
        </timeControl>
        <!-- The Courant–Friedrichs–Lewy number -->
        <CFLNumber> 0.6 </CFLNumber>
        <!-- ALPACA internally calculates with nondimensionalized values. Reference values used for
             nondimensionalization have to be specified to length scales, velocity, density and temperature. -->
        <referenceParameter>
            <lengthReference>       1  </lengthReference>
            <velocityReference>     1  </velocityReference>
            <densityReference>      1  </densityReference>
            <temperatureReference>  1  </temperatureReference>
        </referenceParameter>
    </calculation>

    <!-- This xml node specifies whether a simulation should be restarted or not, and all relevant parameters that
         have to be specified. -->
    <restart>
        <!-- restoreMode explanation - 0: disabled, 1: restore if file exists, 2: force restore -->
        <restoreMode>      0 </restoreMode>
        <!-- The path to the .h5 file that has to be used to restore the simulation. Only used if restore is active -->
        <restoreFileName>  inputfile/restart/restart_***.h5 </restoreFileName>
        <!-- in wall seconds, use 0 to disable interval-based snapshots -->
        <snapshotInterval> 3600 </snapshotInterval>
        <!-- timestamp-based snapshots are always kept -->
        <snapshotsToKeep>  2 </snapshotsToKeep>
        <!-- If snapshots should also be written at specific times, below xml node can be used. -->
        <snapshotTimestamps>
            <!-- <ts1> 0.1 </ts1> -->
            <!-- <ts2> 0.2 </ts2> -->
        </snapshotTimestamps>
    </restart>

    <!-- Below xml node is used to specify output related settings. -->
    <output>
        <!-- TO BE IMPLEMENTED -->
        <enableOutput>         1               </enableOutput>
        <!-- END - TO BE IMPLEMENTED -->
        <outputFileType>XDMF</outputFileType> <!--XDMF-->
        <!-- Specify whether output should be written with a fixed interval (Interval) or at specific timestamps (Timestamps). -->
        <outputTimesType>Timestamps</outputTimesType>
        <!-- The period with which output is written in case interval output is active. Neglected otherwise. -->
        <outputPeriod> 0.05 </outputPeriod>
        <!-- If output at timestamps is active, the timestamps can be specified below. Neglected otherwise. -->
        <timestamps>
            <ts1> 0.0004 </ts1>
            <ts2> 0.0006 </ts2>
            <ts3> 0.0008 </ts3>
            <ts4> 0.0010 </ts4>
            <ts5> 0.0012 </ts5>
            <ts6> 0.0014 </ts6>
            <ts7> 0.0016 </ts7>
            <ts8> 0.0018 </ts8>
            <ts9> 0.05   </ts9>
            <ts10>0.15    </ts10>
            <ts11>0.2    </ts11>
            <ts12>0.4    </ts12>
        </timestamps>
        <timeNamingFactor> 1.e0 </timeNamingFactor>
    </output>
</configuration>